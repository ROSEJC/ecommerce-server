// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Vai trò người dùng: ADMIN hoặc USER
enum Role {
  ADMIN
  USER
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  role        Role      @default(USER)
  cart        Cart?    @relation("CartUser")
  cartId      Int?      // mỗi user có thể có một giỏ hàng hiện tại
  orders      Order[]   // một user có nhiều đơn hàng
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[] // một category có nhiều products:contentReference[oaicite:5]{index=5}
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  
  cartItems   CartItem[]    @relation("ProductToCartItems")
  orderItems  OrderItem[]   @relation("ProductToOrderItems")
}

model Cart {
  id        Int        @id @default(autoincrement())
  user      User       @relation("CartUser", fields: [userId], references: [id])
  userId    Int        @unique
  items     CartItem[] @relation("CartToItems") // ✅ rõ ràng
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation("CartToItems", fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation("ProductToCartItems", fields: [productId], references: [id])
  productId Int
  quantity  Int
}
model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  status    String      @default("Pending")
  items     OrderItem[] @relation("OrderToItems") // ✅ Bổ sung đối xứng
  createdAt DateTime    @default(now())
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation("OrderToItems", fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation("ProductToOrderItems", fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}
